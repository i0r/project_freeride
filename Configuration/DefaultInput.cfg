Context: "Game" {
	MoveForward: { STATE, KEY_W }
	MoveLeft: { STATE, KEY_A }
	MoveBackward: { STATE, KEY_S }
	MoveRight: { STATE, KEY_D }
	Sprint: { STATE, KEY_LEFTSHIFT }
	HeadMoveHorizontal: { AXIS, MOUSE_X, 2000.0, -1000.0, 1000.0, -1.0, 1.0 }
	HeadMoveVertical: { AXIS, MOUSE_Y, 2000.0, -1000.0, 1000.0, -1.0, 1.0 }
}
Context: "Editor" {
	OpenDevMenu: { ACTION, KEY_TILDE }
	CameraMoveForward: { STATE, KEY_W }
	CameraMoveLeft: { STATE, KEY_A }
	CameraMoveBackward: { STATE, KEY_S }
	CameraMoveRight: { STATE, KEY_D }
	CameraLowerAltitude: { STATE, KEY_Q }
	CameraTakeAltitude: { STATE, KEY_E }

	CameraMoveHorizontal: { AXIS, MOUSE_X, 2000.0, -1000.0, 1000.0, -1.0, 1.0 }
	CameraMoveVertical: { AXIS, MOUSE_Y, 2000.0, -1000.0, 1000.0, -1.0, 1.0 }
    
	RightMouseButton: { STATE, MOUSE_RIGHT_BUTTON }
}
Context: "DebugUI" {
	MouseClick: { STATE, MOUSE_LEFT_BUTTON }
	MoveCamera: { STATE, MOUSE_RIGHT_BUTTON }
	KeyCtrl: { STATE, KEY_CONTROL }
	KeyShift: { STATE, KEY_LEFTSHIFT }
	KeyAlt: { STATE, KEY_ALT }
	KeyBackspace: { STATE, KEY_BACKSPACE }
	KeyDelete: { STATE, KEY_DELETEFORWARD }
    KeyA: { STATE, KEY_A }
    KeyC: { STATE, KEY_C }
    KeyV: { STATE, KEY_V }
    KeyX: { STATE, KEY_X }
    KeyY: { STATE, KEY_Y }
    KeyZ: { STATE, KEY_Z }
    KeyEscape: { STATE, KEY_ESCAPE }
    KeyEnter: { STATE, KEY_ENTER }
    KeySpace: { STATE, KEY_SPACE }
    KeyTab: { STATE, KEY_TAB }
    KeyInsert: { STATE, KEY_INSERT }
    KeyEnd: { STATE, KEY_END }
    KeyHome: { STATE, KEY_HOME }
    KeyPageDown: { STATE, KEY_PAGEDOWN }
    KeyPageUp: { STATE, KEY_PAGEUP }
    KeyDownArrow: { STATE, KEY_DOWN }
    KeyUpArrow: { STATE, KEY_UP }
    KeyRightArrow: { STATE, KEY_RIGHT }
    KeyLeftArrow: { STATE, KEY_LEFT }
    
	LeftMouseButton: { STATE, MOUSE_LEFT_BUTTON }
	RightMouseButton: { STATE, MOUSE_RIGHT_BUTTON }
	MiddleMouseButton: { STATE, MOUSE_MIDDLE_BUTTON }
	Modifier1: { STATE, KEY_CONTROL }
	CopyNode: { ACTION, KEY_C }
	PasteNode: { ACTION, KEY_V }
	SaveScene: { ACTION, KEY_S }
	OpenScene: { ACTION, KEY_O }
	Undo: { ACTION, KEY_Z }
	Redo: { ACTION, KEY_Y }
	DeleteNode: { ACTION, KEY_DELETEFORWARD }
}
